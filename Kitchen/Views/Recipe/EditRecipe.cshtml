@{
    ViewBag.Title = "Рецепт";
}
@model Kitchen.Models.RecipeModel

<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        theme: "modern",
        width: 800,
        height: 300,
        plugins: [
             "advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker",
             "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
             "save table contextmenu directionality emoticons template paste textcolor"
        ],
        content_css: "css/content.css",
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | l      ink image | print preview media fullpage | forecolor backcolor emoticons | spoiler",
        setup: function(editor) {
            editor.addButton('spoiler', {
                text: 'spoiler',
                icon: false,
                onclick: function() {
                    editor.insertContent('<div class="myspoiler"><a href="#" onclick="return false;">Cпойлер [показать/скрыть]</a></div><div class="myspoiler-text">Текст, размещенный внутри спойлера.</div>');
                }
            });
        },
        style_formats: [
             { title: 'Bold text', inline: 'b' },
             { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
             { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
             { title: 'Example 1', inline: 'span', classes: 'example1' },
             { title: 'Example 2', inline: 'span', classes: 'example2' },
             { title: 'Table styles' },
             { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
        ]
    });
</script>

@if (Model == null)
{
<h2>Добавить новое блюдо.</h2>
}
else
{
<h2>Редактировать блюдо.</h2>
}

@using (Html.BeginForm("EditRecipe", "Recipe", FormMethod.Post, new { onsubmit = "mySubmit();" }))
{
    @Html.HiddenFor(m => m.Id, new { @Value = Model == null ? 0 : Model.Id })

    @*<text>Alias:</text> @Html.EditorFor(m => m.Alias) @Html.ValidationMessageFor(m => m.Alias) <text> - английские без пробелов</text><br /><br />*@
    <text>Название:</text> @Html.EditorFor(m => m.Name) @Html.ValidationMessageFor(m => m.Name)<br /><br />
    Html.ValidationSummary(true);
    <text>Ингридиенты(нумерованный список):</text> @Html.ValidationMessageFor(m => m.Ingridients)<br /> 
    @Html.TextAreaFor(m => m.Ingridients, 5, 1, new { @style = "width:97%;" }) <br /><br /><br />

    <text>Краткое описание блюда:</text> @Html.ValidationMessageFor(m => m.Brief)<br /> 
    @Html.TextAreaFor(m => m.Brief, 5, 1, new { @style = "width:97%;" }) <br /><br /><br />
    
    <text>Приготовление:</text> <br /> @Html.ValidationMessageFor(m => m.Description)
    @Html.TextAreaFor(m => m.Description, 5, 1, new { @style = "width:97%;" }) 

    <img src='@(Model.Photo==null ? "../../../Content/nophoto.png" : "data:image/jpg;base64,"+@System.Convert.ToBase64String(Model.Photo))' style="width:90px;">

    <br /><br /><br /><br />
<input type="submit" value="Сохранить" />

}

@if (Model == null || Model.Id == 0)
{
    <text>Для добавления фото нажмите сохранить.</text>
}
else
{
    using (Html.BeginForm("setPhoto", "Recipe", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {    
        @Html.HiddenFor(m => m.Id, new { @Value = Model == null ? 0 : Model.Id })

            <input name="photo" type="file" accept="image/*" />
            <input type="submit" value="Изменить фото"/>
    }
}
<script type="text/javascript">
    bkLib.onDomLoaded(function () { nicEditors.allTextAreas() });

    function mySubmit() {
        $("#Brief").html($("#Brief").prev().children().html());
        $("#Description").html($("#Description").prev().children().html());
        $("#Ingridients").html($("#Ingridients").prev().children().html());
    }
</script>