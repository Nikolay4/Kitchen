// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Kitchen.Controllers
{
    public partial class ImageController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ImageController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ImageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetImage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetImage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetImagesFromThing()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetImagesFromThing);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteImg()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteImg);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddImg()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddImg);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ImagesForNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ImagesForNews);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ImageController Actions { get { return MVC.Image; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Image";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Image";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GetImage = "GetImage";
            public readonly string GetImagesFromThing = "GetImagesFromThing";
            public readonly string EditImagesFromThing = "EditImagesFromThing";
            public readonly string DeleteImg = "DeleteImg";
            public readonly string AddImg = "AddImg";
            public readonly string ImagesForNews = "ImagesForNews";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GetImage = "GetImage";
            public const string GetImagesFromThing = "GetImagesFromThing";
            public const string EditImagesFromThing = "EditImagesFromThing";
            public const string DeleteImg = "DeleteImg";
            public const string AddImg = "AddImg";
            public const string ImagesForNews = "ImagesForNews";
        }


        static readonly ActionParamsClass_GetImage s_params_GetImage = new ActionParamsClass_GetImage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetImage GetImageParams { get { return s_params_GetImage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetImage
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetImagesFromThing s_params_GetImagesFromThing = new ActionParamsClass_GetImagesFromThing();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetImagesFromThing GetImagesFromThingParams { get { return s_params_GetImagesFromThing; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetImagesFromThing
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_EditImagesFromThing s_params_EditImagesFromThing = new ActionParamsClass_EditImagesFromThing();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditImagesFromThing EditImagesFromThingParams { get { return s_params_EditImagesFromThing; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditImagesFromThing
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_DeleteImg s_params_DeleteImg = new ActionParamsClass_DeleteImg();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteImg DeleteImgParams { get { return s_params_DeleteImg; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteImg
        {
            public readonly string img_Id = "img_Id";
            public readonly string kitchen_Id = "kitchen_Id";
        }
        static readonly ActionParamsClass_AddImg s_params_AddImg = new ActionParamsClass_AddImg();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddImg AddImgParams { get { return s_params_AddImg; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddImg
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ImagesForNews s_params_ImagesForNews = new ActionParamsClass_ImagesForNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ImagesForNews ImagesForNewsParams { get { return s_params_ImagesForNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ImagesForNews
        {
            public readonly string Id = "Id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string EditImagesFromThing = "EditImagesFromThing";
                public readonly string GetImage = "GetImage";
                public readonly string GetImagesFromThing = "GetImagesFromThing";
                public readonly string ImagesForNews = "ImagesForNews";
            }
            public readonly string EditImagesFromThing = "~/Views/Image/EditImagesFromThing.cshtml";
            public readonly string GetImage = "~/Views/Image/GetImage.cshtml";
            public readonly string GetImagesFromThing = "~/Views/Image/GetImagesFromThing.cshtml";
            public readonly string ImagesForNews = "~/Views/Image/ImagesForNews.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ImageController : Kitchen.Controllers.ImageController
    {
        public T4MVC_ImageController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GetImageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetImage(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetImage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetImageOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetImagesFromThingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetImagesFromThing(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetImagesFromThing);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetImagesFromThingOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditImagesFromThingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditImagesFromThing(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditImagesFromThing);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditImagesFromThingOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteImgOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int img_Id, int kitchen_Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteImg(int img_Id, int kitchen_Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteImg);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "img_Id", img_Id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "kitchen_Id", kitchen_Id);
            DeleteImgOverride(callInfo, img_Id, kitchen_Id);
            return callInfo;
        }

        [NonAction]
        partial void AddImgOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kitchen.Models.addImg model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddImg(Kitchen.Models.addImg model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddImg);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddImgOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ImagesForNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ImagesForNews(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ImagesForNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            ImagesForNewsOverride(callInfo, Id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
