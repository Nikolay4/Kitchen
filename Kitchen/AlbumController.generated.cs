// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Kitchen.Controllers
{
    public partial class AlbumController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AlbumController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AlbumController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ShowAlbum()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowAlbum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddAlbum()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddAlbum);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddPhoto()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddPhoto);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeletePhoto()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePhoto);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditPhoto()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditPhoto);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Photo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Photo);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AlbumController Actions { get { return MVC.Album; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Album";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Album";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ShowAlbum = "ShowAlbum";
            public readonly string AddAlbum = "AddAlbum";
            public readonly string AddPhoto = "AddPhoto";
            public readonly string DeletePhoto = "DeletePhoto";
            public readonly string EditPhoto = "EditPhoto";
            public readonly string Photo = "Photo";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ShowAlbum = "ShowAlbum";
            public const string AddAlbum = "AddAlbum";
            public const string AddPhoto = "AddPhoto";
            public const string DeletePhoto = "DeletePhoto";
            public const string EditPhoto = "EditPhoto";
            public const string Photo = "Photo";
        }


        static readonly ActionParamsClass_ShowAlbum s_params_ShowAlbum = new ActionParamsClass_ShowAlbum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowAlbum ShowAlbumParams { get { return s_params_ShowAlbum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowAlbum
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AddAlbum s_params_AddAlbum = new ActionParamsClass_AddAlbum();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddAlbum AddAlbumParams { get { return s_params_AddAlbum; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddAlbum
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddPhoto s_params_AddPhoto = new ActionParamsClass_AddPhoto();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddPhoto AddPhotoParams { get { return s_params_AddPhoto; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddPhoto
        {
            public readonly string AlbumId = "AlbumId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DeletePhoto s_params_DeletePhoto = new ActionParamsClass_DeletePhoto();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeletePhoto DeletePhotoParams { get { return s_params_DeletePhoto; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeletePhoto
        {
            public readonly string PhotoId = "PhotoId";
        }
        static readonly ActionParamsClass_EditPhoto s_params_EditPhoto = new ActionParamsClass_EditPhoto();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditPhoto EditPhotoParams { get { return s_params_EditPhoto; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditPhoto
        {
            public readonly string PhotoId = "PhotoId";
        }
        static readonly ActionParamsClass_Photo s_params_Photo = new ActionParamsClass_Photo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Photo PhotoParams { get { return s_params_Photo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Photo
        {
            public readonly string id = "id";
            public readonly string count = "count";
            public readonly string number = "number";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddAlbum = "AddAlbum";
                public readonly string AddPhoto = "AddPhoto";
                public readonly string Index = "Index";
                public readonly string Photo = "Photo";
                public readonly string ShowAlbum = "ShowAlbum";
            }
            public readonly string AddAlbum = "~/Views/Album/AddAlbum.cshtml";
            public readonly string AddPhoto = "~/Views/Album/AddPhoto.cshtml";
            public readonly string Index = "~/Views/Album/Index.cshtml";
            public readonly string Photo = "~/Views/Album/Photo.cshtml";
            public readonly string ShowAlbum = "~/Views/Album/ShowAlbum.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AlbumController : Kitchen.Controllers.AlbumController
    {
        public T4MVC_AlbumController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShowAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ShowAlbum(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ShowAlbumOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddAlbum(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AddAlbumOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddAlbumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kitchen.Models.AlbumsModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddAlbum(Kitchen.Models.AlbumsModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddAlbum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddAlbumOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddPhotoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int AlbumId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddPhoto(int AlbumId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddPhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AlbumId", AlbumId);
            AddPhotoOverride(callInfo, AlbumId);
            return callInfo;
        }

        [NonAction]
        partial void AddPhotoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kitchen.Models.AddPhotoModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddPhoto(Kitchen.Models.AddPhotoModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddPhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddPhotoOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DeletePhotoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int PhotoId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeletePhoto(int PhotoId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PhotoId", PhotoId);
            DeletePhotoOverride(callInfo, PhotoId);
            return callInfo;
        }

        [NonAction]
        partial void EditPhotoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int PhotoId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditPhoto(int PhotoId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditPhoto);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PhotoId", PhotoId);
            EditPhotoOverride(callInfo, PhotoId);
            return callInfo;
        }

        [NonAction]
        partial void PhotoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int count, int number);

        [NonAction]
        public override System.Web.Mvc.ActionResult Photo(int id, int count, int number)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Photo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "count", count);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "number", number);
            PhotoOverride(callInfo, id, count, number);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
